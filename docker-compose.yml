# docker compose up --build
# docker compose up runner1

# docker compose down -v --remove-orphans

services:
  sonarqube:
    build:
      context: ./sonarqube
      dockerfile: Dockerfile
    container_name: sonarqube
    depends_on:
      - db
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SONAR_JDBC_USERNAME: ${SONAR_JDBC_USERNAME}
      SONAR_JDBC_PASSWORD: ${SONAR_JDBC_PASSWORD}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - sonarnet

  db:
    image: postgres:13
    container_name: sonarqube_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgresql:/var/lib/postgresql/data
      - ./backup:/docker-entrypoint-initdb.d
    networks:
      - sonarnet

  runner1:
    image: local-github-runner   # ✅ Use the prebuilt image
    container_name: github-runner-${GITHUB_REPO_1}
    environment:
      REPO_URL: https://github.com/${GITHUB_OWNER}/${GITHUB_REPO_1}
      RUNNER_NAME: runner-${GITHUB_REPO_1}
      RUNNER_WORKDIR: /tmp/runner/work
      GITHUB_OWNER: ${GITHUB_OWNER}
      LABELS: runner-${GITHUB_REPO_1}
      ACCESS_TOKEN: ${GH_RUNNER_TOKEN}
      SONAR_TOKEN: ${SONAR_TOKEN}
      PROJECT_KEY: ${GITHUB_REPO_1}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      SONAR_JDBC_USERNAME: ${SONAR_JDBC_USERNAME}
      SONAR_JDBC_PASSWORD: ${SONAR_JDBC_PASSWORD}
      CONNECTION_NAME: ${CONNECTION_NAME}
      SNOW_CONFIG_B64: ${SNOW_CONFIG_B64:-default_value_here}
      SNOW_KEY_B64: ${SNOW_KEY_B64:-default_value_here}
    restart: unless-stopped
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - sonarnet

  runner2:
    image: local-github-runner   # ✅ Use the prebuilt image
    container_name: github-runner-${GITHUB_REPO_2}
    environment:
      REPO_URL: https://github.com/${GITHUB_OWNER}/${GITHUB_REPO_2}
      RUNNER_NAME: runner-${GITHUB_REPO_2}
      GITHUB_OWNER: ${GITHUB_OWNER}
      RUNNER_WORKDIR: /tmp/runner/work
      LABELS: runner-${GITHUB_REPO_2}
      ACCESS_TOKEN: ${GH_RUNNER_TOKEN}
      SONAR_TOKEN: ${SONAR_TOKEN}
      PROJECT_KEY: ${GITHUB_REPO_1}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      SONAR_JDBC_USERNAME: ${SONAR_JDBC_USERNAME}
      SONAR_JDBC_PASSWORD: ${SONAR_JDBC_PASSWORD}
      CONNECTION_NAME: ${CONNECTION_NAME}
      SNOW_CONFIG_B64: ${SNOW_CONFIG_B64:-default_value_here}
      SNOW_KEY_B64: ${SNOW_KEY_B64:-default_value_here}
    restart: unless-stopped
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - sonarnet

volumes:
  sonarqube_data:
  sonarqube_extensions:
  postgresql:

networks:
  sonarnet: